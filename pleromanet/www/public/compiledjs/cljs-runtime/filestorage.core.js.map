{"version":3,"sources":["filestorage/core.cljs"],"mappings":"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","names":["filestorage.core/header","js/filestorage","js/filestorage.core","js/filestorage.core.match","filestorage.core/match","reagent.core.atom","filestorage.core/current-page","btn-text","btn-display","reagent.core/create-class","this","cljs.core.println","cljs.core/deref","js/console.log","cljs.core/contains?","filestorage.db/app-state","reitit.frontend.easy.href","event","cljs.core._EQ_","cljs.core/reset!","cljs.core.print","view","filestorage.core/routes","filestorage.views.home/home-page","filestorage.views.filestorage/filestorage-view","filestorage.views.blog/blog-view","filestorage.views.authorization/login-form","filestorage.views.authorization/registration-form","filestorage.core/init!","reitit.frontend.easy/start!","reitit.frontend.router","reitit.coercion.spec/coercion","m","reagent.core.render","js/document"],"sourcesContent":["(ns filestorage.core\n  (:require [reagent.core :as r]\n            [re-frame.core :as rfc]\n            [reitit.frontend :as rf]\n            [reitit.frontend.easy :as rfe]\n            [reitit.coercion.spec :as rss]\n            [filestorage.db :as db]\n            [filestorage.views.authorization :as auth]\n            [filestorage.views.filestorage :as filestorage]\n            [filestorage.views.blog :as blog]\n            [filestorage.views.home :as home]\n            [ajax.core :refer [GET POST]]\n            [spec-tools.data-spec :as ds]\n            [fipp.edn :as fedn]))\n\n(defn header []\n  [:div\n   [:h1 {:style {:margin \"0 0 0 0\"}} \"pleroma\u2e38net\"]\n   ;;[password-box \"\"]\n   ])\n\n(defonce match (r/atom nil))\n\n(defn current-page\n  []\n  (let [btn-text (r/atom \"v\")\n        btn-display (r/atom \"none\")]\n    (r/create-class\n     {:component-did-mount               ;; the name of a lifecycle function\n      (fn [this]\n        (println \"component-did-mount\"))\n\n      :reagent-render\n      (fn []\n        (js/console.log \"rendering component\")\n        ;;(rfc/dispatch [::events/clear-http-results])\n        [:div\n         [header]\n         [:nav\n          (if (not (contains? @db/app-state :user))\n            [:ul {:style {:white-space \"nowrap\" :font-size \"20px\"}}\n             [:li {:style {:display \"inline\" :margin \"10px\"}}\n              [:a {:href (rfe/href ::registration-page)} \"/register\"]]\n             [:li {:style {:display \"inline\" :margin \"10px\"}}\n              [:a {:href (rfe/href ::login-page)} \"/login\"]]]\n            [:ul {:style {:white-space \"nowrap\" :font-size \"20px\"}}\n             [:li {:style {:display \"inline\" :margin \"10px\"}}\n              [:a {:href (rfe/href ::home-page)} \"~\"]]\n             [:li {:style {:display \"inline\" :margin \"10px\"}}\n              [:a {:href (rfe/href ::filestorage-page)} \"/filestorage\"]]\n             [:li {:style {:display \"inline\" :margin \"10px\"}}\n              [:a {:href (rfe/href ::blog-page)} \"/blog\"]]\n             ])]\n         [:a {:style {:cursor \"pointer\"}\n              :on-click (fn [event]\n                          (if (= @btn-display \"block\")\n                            (do (reset! btn-display \"none\")\n                                (reset! btn-text \"v\"))\n                            (do (reset! btn-display \"block\")\n                                (reset! btn-text \"^\"))))} @btn-text]\n\n         [:hr]\n         [:div {:style {:display @btn-display}}\n          @db/app-state\n         [:hr]]\n         [:br]\n         (if @match\n           (do\n           (js/console.log \"route match\")\n           (print @match)\n           (let [view (:view (:data @match))]\n             [view @match])))])}\n     ;;[:pre (with-out-str (fedn/pprint @match))]\n     )))\n(def routes\n  [[\"/\"\n    {:name ::home-page\n     :view home/home-page}]\n\n   [\"/filestorage\"\n    {:name ::filestorage-page\n     :view filestorage/filestorage-view}]\n\n   [\"/blog\"\n    {:name ::blog-page\n     :view blog/blog-view}]\n\n   [\"/login\"\n    {:name ::login-page\n     :view auth/login-form}]\n\n   [\"/register\"\n    {:name ::registration-page\n     :view auth/registration-form}]])\n\n(defn init! []\n  (rfe/start!\n   (rf/router routes {:data {:coercion rss/coercion}})\n   (fn [m] (reset! match m))\n    ;; set to false to enable HistoryAPI\n   {:use-fragment true})\n  ;;(rfc/dispatch-sync [::events/load-app])\n  (r/render [current-page] (.getElementById js/document \"app\")))\n\n(init!)\n"]}