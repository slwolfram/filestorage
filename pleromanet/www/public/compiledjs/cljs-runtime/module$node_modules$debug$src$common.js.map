{
"version":3,
"file":"module$node_modules$debug$src$common.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/debug/src/common.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$debug$src$common\"] = function(global,require,module,exports) {\n\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","setup","env","selectColor","namespace","hash","i","length","charCodeAt","createDebug","colors","Math","abs","debug","enabled","_len","arguments","args","Array","_key","curr","Number","Date","diff","prevTime","prev","coerce","unshift","index","replace","match","format","formatter","formatters","call","val","splice","formatArgs","apply","log","useColors","color","destroy","extend","init","instances","push","indexOf","delimiter","default","Error","stack","message","disable","enable","namespaces","save","names","skips","split","len","RegExp","substr","instance","name","test","humanize","Object","keys","forEach","key","load"]
}
