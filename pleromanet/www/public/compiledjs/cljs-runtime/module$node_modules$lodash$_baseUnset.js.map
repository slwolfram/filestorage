{
"version":3,
"file":"module$node_modules$lodash$_baseUnset.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC9FC,SAAWH,OAAA,CAAQ,sCAAR,CADmF,CAE9FI,KAAOJ,OAAA,CAAQ,iCAAR,CAFuF,CAG9FK,OAASL,OAAA,CAAQ,oCAAR,CAHqF,CAI9FM,MAAQN,OAAA,CAAQ,mCAAR,CAgBZC,OAAOC,CAAAA,OAAP,CANAK,QAAkB,CAACC,MAAD,CAASC,IAAT,CAAe,CAC/BA,IAAA,CAAON,QAAA,CAASM,IAAT,CAAeD,MAAf,CACPA,OAAA,CAASH,MAAA,CAAOG,MAAP,CAAeC,IAAf,CACT,OAAiB,KAAjB,EAAOD,MAAP,EAAyB,OAAOA,MAAA,CAAOF,KAAA,CAAMF,IAAA,CAAKK,IAAL,CAAN,CAAP,CAHD,CAdiE;",
"sources":["node_modules/lodash/_baseUnset.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseUnset\"] = function(global,require,module,exports) {\nvar castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n\n};"],
"names":["shadow$provide","global","require","module","exports","castPath","last","parent","toKey","baseUnset","object","path"]
}
