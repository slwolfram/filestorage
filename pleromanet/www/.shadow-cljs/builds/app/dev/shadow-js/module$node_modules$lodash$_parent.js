["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_parent.js"],"~:js","shadow$provide.module$node_modules$lodash$_parent=function(global,require,module,exports){var baseGet=require(\"module$node_modules$lodash$_baseGet\"),baseSlice=require(\"module$node_modules$lodash$_baseSlice\");module.exports=function(object,path){return 2>path.length?object:baseGet(object,baseSlice(path,0,-1))}}","~:source","shadow$provide[\"module$node_modules$lodash$_parent\"] = function(global,require,module,exports) {\nvar baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_baseSlice","~$module$node_modules$lodash$_baseGet"]],"~:properties",["^5",[]],"~:compiled-at",1701272802796,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_parent.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,kCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC3FC,QAAUH,OAAA,CAAQ,qCAAR,CADiF,CAE3FI,UAAYJ,OAAA,CAAQ,uCAAR,CAchBC,OAAOC,CAAAA,OAAP,CAJAG,QAAe,CAACC,MAAD,CAASC,IAAT,CAAe,CAC5B,MAAqB,EAAd,CAAAA,IAAKC,CAAAA,MAAL,CAAkBF,MAAlB,CAA2BH,OAAA,CAAQG,MAAR,CAAgBF,SAAA,CAAUG,IAAV,CAAgB,CAAhB,CAAmB,CAAC,CAApB,CAAhB,CADN,CAZiE;\",\n\"sources\":[\"node_modules/lodash/_parent.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_parent\\\"] = function(global,require,module,exports) {\\nvar baseGet = require('./_baseGet'),\\n    baseSlice = require('./_baseSlice');\\n\\n/**\\n * Gets the parent value at `path` of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {Array} path The path to get the parent value of.\\n * @returns {*} Returns the parent value.\\n */\\nfunction parent(object, path) {\\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\\n}\\n\\nmodule.exports = parent;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseGet\",\"baseSlice\",\"parent\",\"object\",\"path\",\"length\"]\n}\n"]