{"version":3,"sources":["filestorage/events.cljs"],"mappings":";AAQA,yDAAA,zDAACA,wJAEA,WAAAC,SAAmBK;AAAnB,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAcG;AAAd,AAAA,kDAAA,gDACO,AAACE,uGAAMF,GAAGG;;AAElB,yDAAA,zDAACC,6KAEA,cAAAC,HAAKL;AAAL,AAAA,IAAAM,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASL;aAAT,AAAAM,4CAAAD,WAAA,IAAA,pEAAWE;AAAX,AACE,gEAAA,oIAAA,7LAACC,sDAAOT;;AAEX,yDAAA,zDAACI,+KAEA,cAAAM,HAAKV;AAAL,AAAA,IAAAW,aAAAD;QAAA,AAAAH,4CAAAI,WAAA,IAAA,/DAASV;aAAT,AAAAM,4CAAAI,WAAA,IAAA,pEAAWH;AAAX,AACE,wDAAA,jDAACI,8CAAMZ,sFAAwBQ;;AAElC,yDAAA,zDAACJ,8KAEA,cAAAS,HAAKb;AAAL,AAAA,IAAAc,aAAAD;QAAA,AAAAN,4CAAAO,WAAA,IAAA,/DAASb;aAAT,AAAAM,4CAAAO,WAAA,IAAA,pEAAWN;AAAX,AACE,wDAAA,jDAACI,8CAAMZ,qFAAwBQ;;AAGlC,yDAAA,zDAACJ,6KAEA,cAAAW,HAAKf;AAAL,AAAA,IAAAgB,aAAAD;QAAA,AAAAR,4CAAAS,WAAA,IAAA,/DAASf;aAAT,AAAAM,4CAAAS,WAAA,IAAA,pEAAWR;AAAX,AACE,wDAAA,jDAACI,8CAAMZ,oFAAuBQ;;AAGjC,yDAAA,zDAACb,8JAEA,4CAAAsB,HAAiBjB;AAAjB,AAAA,IAAAkB,aAAAD;QAAA,AAAAV,4CAAAW,WAAA,IAAA,/DAAqBjB;IAArBkB,aAAA,AAAAZ,4CAAAW,WAAA,IAAA;IAAAC,iBAAA,AAAArB,4BAAAqB;UAAA,AAAApB,4CAAAoB,eAAA,jEAA+BC;aAA/B,AAAArB,4CAAAoB,eAAA,uDAAA,3HAAmCE;WAAnC,AAAAtB,4CAAAoB,eAAA,lEAA0CG;sBAA1C,AAAAvB,4CAAAoB,eAAA,2EAAA,mFAAA,3OAA+CI;AAA/C,AAGE,yDAAA,oIAAA,7LAACd,sDAAOT;;AAHV,kDAAA,iEAAA,2CAAA,8DAAA,uDAAA,2DAAA,OAAA,2DAAA,iOAAA,iFAAA,gEAAA,mFAAA,hoBAIwBqB,0DACSD,4HAGXE,gFACW,+BAAA,2CAAA,8DAAA,xIAACE,uNACDD;;AAGlC,yDAAA,zDAAC5B,+KAEA,oDAAA8B,HAAyBzB;AAAzB,AAAA,IAAA0B,aAAAD;QAAA,AAAAlB,4CAAAmB,WAAA,IAAA,/DAA6BzB;IAA7B0B,aAAA,AAAApB,4CAAAmB,WAAA,IAAA;IAAAC,iBAAA,AAAA7B,4BAAA6B;UAAA,AAAA5B,4CAAA4B,eAAA,jEAAuCP;aAAvC,AAAArB,4CAAA4B,eAAA,uDAAA,3HAA2CN;WAA3C,AAAAtB,4CAAA4B,eAAA,lEAAkDL;sBAAlD,AAAAvB,4CAAA4B,eAAA,2EAAA,mFAAA,3OAAuDJ;sBAAvD,AAAAxB,4CAAA4B,eAAA,7EAAuEC;AAAvE,AAGE,yDAAA,oIAAA,7LAACnB,sDAAOT;;AAHV,kDAAA,iEAAA,2CAAA,8DAAA,uDAAA,2DAAA,OAAA,0FAAA,6DAAA,iOAAA,iFAAA,zkBAIwBqB,0DACSD,gIAET,AAACS,wFACDP,gFACS,+BAAA,2CAAA,8DAAA,xIAACE,uNACDD,gFACAK","names":["re_frame.core.reg_event_fx","p__20832","map__20833","cljs.core/--destructure-map","cljs.core.get","db","_","cljs.core.merge","filestorage.db/default-db","re_frame.core.reg_event_db","p__20834","vec__20835","cljs.core.nth","result","cljs.core.dissoc","p__20838","vec__20839","cljs.core.assoc","p__20842","vec__20843","p__20846","vec__20847","p__20850","vec__20851","map__20854","uri","method","body","on-success-kvec","ajax.core/json-response-format","p__20855","vec__20856","map__20859","on-failure-kvec","ajax.core/json-request-format"],"sourcesContent":["(ns filestorage.events\n  (:require\n   [day8.re-frame.http-fx]\n   [re-frame.core :refer [reg-event-fx] :as rfc]\n   [ajax.core :as ajax]\n   [filestorage.db :as db]\n   ))\n\n(rfc/reg-event-fx\n ::load-app\n (fn  [{:keys [db]} _]\n   {:db (merge db db/default-db)}))\n\n(rfc/reg-event-db\n ::clear-http-results\n (fn [db [_ result]]\n   (dissoc db :failure-http-result :success-http-result)))\n\n(rfc/reg-event-db\n ::success-http-result\n (fn [db [_ result]]\n   (assoc db :success-http-result result)))\n\n(rfc/reg-event-db\n ::failure-http-result\n (fn [db [_ result]]\n   (assoc db :failure-http-result result)\n   ))\n\n(rfc/reg-event-db\n ::registration-error\n (fn [db [_ result]]\n   (assoc db :registration-error result)\n   ))\n\n(rfc/reg-event-fx\n ::upload-file\n (fn upload-file [db [_ {:keys [uri method body on-success-kvec]\n                          :or {method :post\n                               on-success-kvec [:on-success]}}]]\n   (dissoc db :failure-http-result :success-http-result)\n   {:http-xhrio {:method method\n                 :uri             uri\n                 :timeout         8000\n                 ;;:format (ajax/json-request-format)\n                 :body body\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success      on-success-kvec\n                 :on-failure      [::failure-http-result]}}))\n\n(rfc/reg-event-fx\n ::submit-post-request\n (fn submit-post-request [db [_ {:keys [uri method body on-success-kvec on-failure-kvec]\n                         :or {method :post\n                              on-success-kvec [:on-success]}}]]\n   (dissoc db :failure-http-result :success-http-result)\n   {:http-xhrio {:method method\n                 :uri             uri\n                 :timeout         8000\n                 :format (ajax/json-request-format)\n                 :params body\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success      on-success-kvec\n                 :on-failure      on-failure-kvec}}))\n"]}