{"version":3,"sources":["filestorage/core.cljs"],"mappings":";AAYA,AAAA,AAAMA;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAMA,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAM,AAAA,AAACC;;AAEhB,AAAA,AAAME;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD,AAEIN,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAI,AAAK,AAAA,AAAAM,AAAA,AAACE,AAAWC,AAGN,AAAA,AAACC,AAED,AAAA,AAACA,AAGD,AAAA,AAACA,AAEhBD,AAED,AAAA,AAAAH,AAAKF,AACH,AAAMO,AAAK,AAAA,AAAO,AAAA,AAAA,AAAAL,AAAQF;AAA1B,AAAA,AAAA,AAAAE,AACGK,AAAMP;AAFX;;AAMH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKQ,AAGMC,AAIAC,AAIAC;AAGX,AAAA,AAAMC;AAAN,AACE,AAACC,AACA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAUN,AAAyBO,AACpC,AAAKC;AAAL,AAAQ,AAACC,AAAOjB,AAAMgB;AAFvB,AAAA,AAAA;;AAKA,AAAA,AAACE,AAAUf,AAAc,AAAA,AAAiBgB;;AAE5C,AAACP","names":["filestorage.core/header","js/filestorage","js/filestorage.core","js/filestorage.core.match","filestorage.core/match","reagent.core.atom","cljs.core/deref","filestorage.core/current-page","cljs.core/contains?","filestorage.db/app-state","reitit.frontend.easy.href","view","filestorage.core/routes","filestorage.main/home","filestorage.main/login-form","filestorage.main/registration-form","filestorage.core/init!","reitit.frontend.easy/start!","reitit.frontend.router","reitit.coercion.spec/coercion","m","cljs.core/reset!","reagent.core.render","js/document"],"sourcesContent":["(ns filestorage.core\n  (:require [reagent.core :as r]\n            [reitit.frontend :as rf]\n            [reitit.frontend.easy :as rfe]\n            [reitit.coercion.spec :as rss]\n            [filestorage.db :as db]\n            [filestorage.main :as main]\n            [accountant.core :as accountant]\n            [ajax.core :refer [GET POST]]\n            [spec-tools.data-spec :as ds]\n            [fipp.edn :as fedn]))\n\n(defn header []\n  [:div\n   [:h1 {:style {:margin \"0 0 0 0\"}} \"pleroma|net\"]\n   ;;[password-box \"\"]\n   ])\n\n(defonce match (r/atom nil))\n\n(defn current-page []\n  [:div\n   [header]\n   [:nav\n    (if (not (contains? @db/app-state :user))\n      [:ul {:style {:white-space \"nowrap\" :font-size \"20px\"}}\n       [:li {:style {:display \"inline\" :margin \"10px\"}}\n        [:a {:href (rfe/href ::registration-page)} \"/register\"]]\n       [:li {:style {:display \"inline\" :margin \"10px\"}}\n        [:a {:href (rfe/href ::login-page)} \"/login\"]]]\n      [:ul {:style {:white-space \"nowrap\" :font-size \"20px\"}}\n       [:li {:style {:display \"inline\" :margin \"10px\"}}\n        [:a {:href (rfe/href ::home-page)} \"~\"]]])]\n   [:hr]\n   @db/app-state\n\n   (if @match\n     (let [view (:view (:data @match))]\n       [view @match]))]\n   ;;[:pre (with-out-str (fedn/pprint @match))]\n  )\n\n(def routes\n  [[\"/\"\n    {:name ::home-page\n     :view main/home}]\n\n   [\"/login\"\n    {:name ::login-page\n     :view main/login-form}]\n\n   [\"/register\"\n    {:name ::registration-page\n     :view main/registration-form}]])\n\n\n(defn init! []\n  (rfe/start!\n   (rf/router routes {:data {:coercion rss/coercion}})\n   (fn [m] (reset! match m))\n    ;; set to false to enable HistoryAPI\n   {:use-fragment true})\n  (r/render [current-page] (.getElementById js/document \"app\")))\n\n(init!)\n"]}